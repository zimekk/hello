{"version":3,"file":"818.js","mappings":"gQAWIA,EAAU,GAEdA,EAAQC,kBAAoB,IAC5BD,EAAQE,cAAgB,IAElBF,EAAQG,OAAS,SAAc,KAAM,QAE3CH,EAAQI,OAAS,IACjBJ,EAAQK,mBAAqB,IAEhB,IAAI,IAASL,GAKnB,QAAe,KAAW,WAAiB,gBAAiBM,ECvBpD,SAASC,IACtB,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,KAEjCC,EAAAA,EAAAA,YAAU,KACOC,SAASC,eAAe,UAChCC,YAAc,YAErB,MAAMC,EAAWH,SAASC,eAAe,YACnCG,EAAQ,GAEdC,UAAUC,cAAcC,iBAAiB,WAAW,SAAUC,GAE5D,IACIC,EADAC,EAAWF,EAAMG,KAAKC,OAGrBR,EAAMM,KACTD,EAAOT,SAASa,cAAc,OAC9BV,EAASW,YAAYL,GACrBL,EAAMM,GAAYD,IAGpBA,EAAOL,EAAMM,IACRR,YAAc,UAAYQ,EAAW,UAAYF,EAAMG,KAAKI,aAElE,IAEH,MAAMC,GAAmBC,EAAAA,EAAAA,cAAaC,IACpC,MAAQC,MAAOvB,GAASsB,EAAEE,OAC1BvB,EAAQD,KACP,IAEGyB,GAAoBJ,EAAAA,EAAAA,cAAY,KACpCpB,EAAQ,IAGHQ,UAAUC,cAAcgB,WAM7BjB,UAAUC,cAAcgB,WAAWC,YAAY3B,GAL9BI,SAASC,eAAe,UAChCC,YAAc,yBAKtB,CAACN,IAEE4B,GAAgBP,EAAAA,EAAAA,cACnBC,GACW,UAAVA,EAAEO,MACDP,EAAEQ,WACFR,EAAES,iBAAkBN,MACvB,CAACA,IAGH,OACE,2BAASO,UAAWC,EAAAA,SAClB,kCACA,yGAKA,kDACsB,IACpB,yBAAOC,GAAG,qBAAqBC,KAAK,SAASC,aAAa,MAAa,IAFzE,qCAGqC,IACnC,yBAAOF,GAAG,mBAAmBC,KAAK,SAASC,aAAa,MAAa,IAJvE,WAQA,0BAAQF,GAAG,QAAX,yBAEA,wKAKA,wBAAMA,GAAG,WACT,uBAAKA,GAAG,aACR,yBACEX,MAAOvB,EACPqC,SAAUjB,EACVkB,UAAWV,IAEb,0BAAQW,QAASd,EAAmBe,UAAWxC,EAAKyC,QAApD,W,8DClFFC,E,MAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAOV,GAAI,8FAA+F,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,+CAA+C,MAAQ,GAAG,SAAW,kDAAkD,eAAiB,CAAC,4GAA4G,WAAa,MAEraQ,EAAwBG,OAAS,CAChC,QAAW,wBAEZ","sources":["webpack://@dev/web/./src/containers/Push.module.scss?b5da","webpack://@dev/web/./src/containers/Push.tsx","webpack://@dev/web/./src/containers/Push.module.scss"],"sourcesContent":["\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[0].use[2]!./Push.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[0].use[2]!./Push.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styles from \"./Push.module.scss\";\n\nexport default function Section() {\n  const [text, setText] = useState(\"\");\n\n  useEffect(() => {\n    const status = document.getElementById(\"status\");\n    status.textContent = \"supported\";\n\n    const received = document.getElementById(\"received\");\n    const inbox = {};\n\n    navigator.serviceWorker.addEventListener(\"message\", function (event) {\n      // A message has been received, now show the message on the page.\n      var clientId = event.data.client;\n      var node;\n      // A message from this client hasnâ€™t been received before, so we need to setup a place to show its messages.\n      if (!inbox[clientId]) {\n        node = document.createElement(\"div\");\n        received.appendChild(node);\n        inbox[clientId] = node;\n      }\n      // Show the message.\n      node = inbox[clientId];\n      node.textContent = \"Client \" + clientId + \" says: \" + event.data.message;\n    });\n  }, []);\n\n  const handleChangeText = useCallback((e) => {\n    const { value: text } = e.target;\n    setText(text);\n  }, []);\n\n  const handleSendMessage = useCallback(() => {\n    setText(\"\");\n    // sendMessage({ uuid, text });\n\n    if (!navigator.serviceWorker.controller) {\n      const status = document.getElementById(\"status\");\n      status.textContent = \"error: no controller\";\n      return;\n    }\n    // Send the message to the service worker.\n    navigator.serviceWorker.controller.postMessage(text);\n  }, [text]);\n\n  const handleKeyDown = useCallback(\n    (e) =>\n      e.key === \"Enter\" &&\n      !e.shiftKey &&\n      (e.preventDefault(), handleSendMessage()),\n    [handleSendMessage]\n  );\n\n  return (\n    <section className={styles.Section}>\n      <h2>Push</h2>\n      <p>\n        This demo shows how to register for push notifications and how to send\n        them.\n      </p>\n\n      <form>\n        Notification delay:{\" \"}\n        <input id=\"notification-delay\" type=\"number\" defaultValue=\"5\"></input>{\" \"}\n        seconds Notification Time-To-Live:{\" \"}\n        <input id=\"notification-ttl\" type=\"number\" defaultValue=\"0\"></input>{\" \"}\n        seconds\n      </form>\n\n      <button id=\"doIt\">Try to conquer Italy!</button>\n\n      <p>\n        Open another window with this page and type some text in below to\n        postMessage it to the ServiceWorker which will forward the message\n        along.\n      </p>\n      <span id=\"status\"></span>\n      <div id=\"received\"></div>\n      <input\n        value={text}\n        onChange={handleChangeText}\n        onKeyDown={handleKeyDown}\n      />\n      <button onClick={handleSendMessage} disabled={!text.length}>\n        send\n      </button>\n    </section>\n  );\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".tjNCk8qW9Vs65hlz4WRw{color:blue;font-family:monospace;font-size:1rem;white-space:pre-wrap}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/containers/Push.module.scss\"],\"names\":[],\"mappings\":\"AAAA,sBACE,UAAA,CACA,qBAAA,CACA,cAAA,CACA,oBAAA\",\"sourcesContent\":[\".Section {\\n  color: blue;\\n  font-family: monospace;\\n  font-size: 1rem;\\n  white-space: pre-wrap;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"Section\": \"tjNCk8qW9Vs65hlz4WRw\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","undefined","Section","text","setText","useState","useEffect","document","getElementById","textContent","received","inbox","navigator","serviceWorker","addEventListener","event","node","clientId","data","client","createElement","appendChild","message","handleChangeText","useCallback","e","value","target","handleSendMessage","controller","postMessage","handleKeyDown","key","shiftKey","preventDefault","className","styles","id","type","defaultValue","onChange","onKeyDown","onClick","disabled","length","___CSS_LOADER_EXPORT___","push","module","locals"],"sourceRoot":""}